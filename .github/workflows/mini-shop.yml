name: Build, Test, and Deploy Mini Shop Management System

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write  # Needed to push Docker images to registries

    steps:
      # Step 1: Checkout the Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 for Java Applications
      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: x64

      # Step 3: Cache Maven Dependencies for Faster Builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the Java Application
      - name: Build, Clean, and Test with Maven
        run: mvn clean package

      # Step 5: Run Integration Tests (Optional)
      - name: Run Integration Tests
        run: mvn verify

      # Step 6: Log in to Docker Registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build the Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mini-shop-management-system:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/mini-shop-management-system:${{ github.run_number }} .

      # Step 8: Test Docker Image Locally
      - name: Test Docker Image
        run: |
          docker run --rm -d -p 8080:8080 --name test-mini-shop \
            ${{ secrets.DOCKER_USERNAME }}/mini-shop-management-system:latest
          sleep 10
          curl -f http://localhost:8080/actuator/health || (docker logs test-mini-shop && exit 1)
          docker stop test-mini-shop

      # Step 9: Push the Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mini-shop-management-system:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mini-shop-management-system:${{ github.run_number }}